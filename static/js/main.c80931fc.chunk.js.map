{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","className","href","TodoInfo","title","completed","user","classNames","TodoList","todos","map","todo","getUserById","userId","usersFromServer","find","preparedTodos","App","useState","setTodos","hasError","setHasError","values","setValues","createNewId","allId","Math","max","action","method","onSubmit","e","preventDefault","hasAnyError","trim","prevState","newTodo","prev","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c80931fc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport './UserInfo.scss';\n\ntype Props = {\n  name: string;\n  email: string;\n};\n\nexport const UserInfo: React.FC<Props> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types';\nimport './TodoInfo.scss';\n\nexport const TodoInfo: React.FC<Todo> = ({\n  title,\n  id,\n  completed,\n  user,\n}) => (\n  <article\n    data-id={id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n\n    {user && (\n      <UserInfo\n        name={user.name}\n        email={user.email}\n      />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        id={todo.id}\n        title={todo.title}\n        completed={todo.completed}\n        user={todo.user}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types';\nimport { User } from './types/User';\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId)\n  || null;\n};\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [hasError, setHasError] = useState({ title: false, userId: false });\n  const [values, setValues] = useState({\n    title: '',\n    userId: 0,\n  });\n\n  const { title, userId } = values;\n\n  const createNewId = () => {\n    const allId = todos.map(todo => todo.id);\n\n    return Math.max(...allId) + 1;\n  };\n\n  const handleTitleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, title: e.target.value });\n\n    setHasError({ ...hasError, title: false });\n  };\n\n  const handleUserIdSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setValues({ ...values, userId: +e.target.value });\n\n    setHasError({ ...hasError, userId: false });\n  };\n\n  const reset = () => {\n    setHasError({ title: false, userId: false });\n\n    setValues({\n      title: '',\n      userId: 0,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    let hasAnyError = false;\n\n    if (title.trim() === '') {\n      setHasError(prevState => ({ ...prevState, title: true }));\n      hasAnyError = true;\n    }\n\n    if (userId === 0) {\n      setHasError(prevState => ({ ...prevState, userId: true }));\n      hasAnyError = true;\n    }\n\n    if (hasAnyError) {\n      return;\n    }\n\n    const newTodo = {\n      id: createNewId(),\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId) as User,\n    };\n\n    reset();\n\n    setTodos(prev => [...prev, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n\n          {hasError.title\n            && (<span className=\"error\">Please enter a title</span>) }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdSelect}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n\n          {hasError.userId\n           && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}